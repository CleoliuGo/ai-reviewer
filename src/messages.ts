import { FileDiff } from "./diff";
import { PullRequestSummary } from "./prompts";

export function buildInitialMessage(
  baseCommit: string,
  headCommit: string,
  fileDiffs: FileDiff[]
): string {
  let message = `⏳ **Analyzing changes in this PR...** ⏳\n\n`;
  message += `_This might take a few minutes, please wait_\n\n`;

  // Group files by operation

  message += `<details>\n<summary>📥 Commits</summary>\n\n`;
  message += `Analyzing changes from base commit (\`${baseCommit}\`) to head commit (\`${headCommit}\`)\n\n`;
  message += "\n</details>\n\n";

  message += `<details>\n<summary>📁 Files being considered (${fileDiffs.length})</summary>\n\n`;
  for (const diff of fileDiffs) {
    let prefix = "🔄"; // Modified
    if (diff.status === "added") prefix = "➕";
    if (diff.status === "removed") prefix = "➖";
    if (diff.status === "renamed") prefix = "📝";

    let fileText = `${prefix} ${diff.filename}`;
    if (diff.status === "renamed") {
      fileText += ` (from ${diff.previous_filename})`;
    }
    fileText += ` _(${diff.hunks.length} hunks)_`;
    message += `${fileText}\n`;
  }
  message += "\n</details>\n\n";

  message += "--- \n_autogenerated by presubmit.ai_";

  return message;
}

export function buildWalkthroughMessage(summary: PullRequestSummary): string {
  let message = `# 📖 Walkthrough\n\n`;

  // Add description with proper spacing
  message += `${summary.description.trim()}\n\n`;

  message += `## Changes\n\n`;

  // Create table with proper column alignment and escaping
  message += `| File | Summary |\n`;
  message += `|:----------|:---------------|\n`; // Left-align columns

  for (const file of summary.files) {
    // Escape pipes and wrap paths in backticks for better formatting
    const escapedPath = file.filename.replace(/\|/g, "\\|");
    const escapedSummary = file.summary.replace(/\|/g, "\\|");

    message += `| \`${escapedPath}\` | ${escapedSummary} |\n`;
  }

  return message;
}
